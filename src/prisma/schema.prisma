generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cart {
  id         Int       @id @default(autoincrement())
  user_id    Int
  product_id Int
  quantity   Int
  price      Int
  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime? @default(now()) @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)
  products   products  @relation(fields: [product_id], references: [id])
  users      users     @relation(fields: [user_id], references: [id])

  @@index([product_id], name: "FK_cart_product_id_products_id")
  @@index([user_id], name: "FK_cart_user_id_users_id")
}

model categories {
  id            Int             @id @default(autoincrement())
  name          String          @unique @db.VarChar(100)
  subcategories subcategories[]
}

model characters {
  id    Int     @id @default(autoincrement())
  name  String  @unique @db.VarChar(100)
  feeds feeds[]
}

model feed_comments {
  id         Int       @id @default(autoincrement())
  user_id    Int
  feed_id    Int
  contents   String    @db.Text
  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime? @default(now()) @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)
  feeds      feeds     @relation(fields: [feed_id], references: [id])
  users      users     @relation(fields: [user_id], references: [id])

  @@index([feed_id], name: "FK_feed_comments_feed_id_feeds_id")
  @@index([user_id], name: "FK_feed_comments_user_id_users_id")
}

model feed_images {
  id        Int    @id @default(autoincrement())
  feed_id   Int
  image_url String @db.VarChar(2000)
  feeds     feeds  @relation(fields: [feed_id], references: [id])

  @@index([feed_id], name: "FK_feed_images_feed_id_feeds_id")
}

model feed_products {
  id         Int      @id @default(autoincrement())
  feed_id    Int
  product_id Int
  feeds      feeds    @relation(fields: [feed_id], references: [id])
  products   products @relation(fields: [product_id], references: [id])

  @@index([feed_id], name: "FK_feed_products_feed_id_feeds_id")
  @@index([product_id], name: "FK_feed_products_product_id_products_id")
}

model feeds {
  id            Int             @id @default(autoincrement())
  character_id  Int
  title         String          @db.VarChar(100)
  contents      String          @db.Text
  /// The value of this field is generated by the database as: `b'0'`.
  isLiked       Boolean         @default(dbgenerated("b'0'")) @db.Bit(1)
  created_at    DateTime        @default(now()) @db.DateTime(0)
  updated_at    DateTime?       @default(now()) @db.DateTime(0)
  deleted_at    DateTime?       @db.DateTime(0)
  characters    characters      @relation(fields: [character_id], references: [id])
  feed_comments feed_comments[]
  feed_images   feed_images[]
  feed_products feed_products[]
  likes         likes[]

  @@index([character_id], name: "FK_feeds_character_id_characters_id")
}

model product_image_types {
  id             Int              @id @default(autoincrement())
  name           String?          @db.VarChar(100)
  product_images product_images[]
}

model product_images {
  id                    Int                 @id @default(autoincrement())
  product_id            Int
  image_url             String              @db.VarChar(2000)
  product_image_type_id Int
  products              products            @relation(fields: [product_id], references: [id])
  product_image_types   product_image_types @relation(fields: [product_image_type_id], references: [id])

  @@index([product_id], name: "FK_product_images_product_id_products_id")
  @@index([product_image_type_id], name: "FK_product_images_product_image_type_id_product_image_types_id")
}

model products {
  id             Int              @id @default(autoincrement())
  name           String           @unique @db.VarChar(100)
  price          Int
  description    String           @db.Text
  product_rate   Decimal          @db.Decimal(5, 1)
  subcategory_id Int
  subcategories  subcategories    @relation(fields: [subcategory_id], references: [id])
  cart           cart[]
  feed_products  feed_products[]
  product_images product_images[]
  recent_views   recent_views[]
  reviews        reviews[]

  @@index([subcategory_id], name: "FK_products_subcategory_id_subcategories_id")
}

model recent_views {
  id         Int      @id @default(autoincrement())
  user_id    Int
  product_id Int
  viewed_at  DateTime @default(now()) @db.DateTime(0)
  products   products @relation(fields: [product_id], references: [id])
  users      users    @relation(fields: [user_id], references: [id])

  @@index([product_id], name: "FK_recent_views_product_id_products_id")
  @@index([user_id], name: "FK_recent_views_user_id_users_id")
}

model reviews {
  id          Int       @id @default(autoincrement())
  product_id  Int
  user_id     Int
  contents    String    @db.Text
  review_rate Decimal   @db.Decimal(5, 1)
  liked_num   Int?      @default(0)
  /// The value of this field is generated by the database as: `b'0'`.
  isLiked     Boolean   @default(dbgenerated("b'0'")) @db.Bit(1)
  created_at  DateTime  @default(now()) @db.DateTime(0)
  updated_at  DateTime? @default(now()) @db.DateTime(0)
  deleted_at  DateTime? @db.DateTime(0)
  products    products  @relation(fields: [product_id], references: [id])
  users       users     @relation(fields: [user_id], references: [id])

  @@index([product_id], name: "FK_reviews_product_id_products_id")
  @@index([user_id], name: "FK_reviews_user_id_users_id")
}

model subcategories {
  id          Int        @id @default(autoincrement())
  category_id Int
  name        String     @unique @db.VarChar(100)
  categories  categories @relation(fields: [category_id], references: [id])
  products    products[]

  @@index([category_id], name: "FK_subcategories_category_id_categories_id")
}

model users {
  id               Int             @id @default(autoincrement())
  email            String          @unique @db.VarChar(100)
  password         String          @db.VarChar(100)
  confirm_password String          @db.VarChar(100)
  username         String          @db.VarChar(100)
  created_at       DateTime        @default(now()) @db.DateTime(0)
  updated_at       DateTime?       @default(now()) @db.DateTime(0)
  deleted_at       DateTime?       @db.DateTime(0)
  cart             cart[]
  feed_comments    feed_comments[]
  likes            likes[]
  recent_views     recent_views[]
  reviews          reviews[]
}

model likes {
  id      Int   @id @default(autoincrement())
  user_id Int
  feed_id Int
  feeds   feeds @relation(fields: [feed_id], references: [id])
  users   users @relation(fields: [user_id], references: [id])

  @@index([feed_id], name: "FK_likes_feed_id_feeds_id")
  @@index([user_id], name: "FK_likes_user_id_users_id")
}
